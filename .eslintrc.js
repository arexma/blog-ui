module.exports = {
  root: true,
  env: {
    commonjs: true,
    node: true,
    browser: true,
    es2021: true,
  },
  extends: ['standard-with-typescript', 'plugin:react/recommended', 'prettier'],
  parser: '@typescript-eslint/parser',
  overrides: [
    {
      env: {
        node: true,
      },
      files: ['**/*.{js,cjs,mjs,jsx,ts,cts,mts,tsx}'],
      extends: ['eslint:recommended', 'plugin:@typescript-eslint/recommended', 'plugin:regexp/recommended'],
      rules: {
        'array-callback-return': 'warn',
        'no-cond-assign': ['warn', 'except-parens'],
        'no-control-regex': 'warn',
        'no-empty-character-class': 'warn',
        'no-ex-assign': 'warn',
        'no-fallthrough': 'warn',
        'no-valid-regexp': 'off',
        'no-self-assign': 'warn',
        'no-self-compare': 'warn',
        'no-sparse-arrays': 'warn',
        'no-unreachable': 'warn',
        'no-unreachable-loop': 'warn',
        'consistent-return': 'error',
        eqeqeq: ['warn', 'smart'],
        'logical-assignment-operators': ['warn', 'always', { enforceIfStatements: true }],
        'no-caller': 'warn',
        'no-else-return': ['warn', { allowElseIf: false }],
        'no-empty-static-block': 'warn',
        'no-eval': 'warn',
        'no-extend-native': 'warn',
        'no-extra-bind': 'warn',
        'no-extra-boolean-cast': ['warn', { enforceForLogicalOperands: true }],
        'no-extra-label': 'warn',
        'no-global-assign': 'warn',
        'no-iterator': 'warn',
        'no-label-var': 'warn',
        'no-labels': ['warn', { allowLoop: true, allowSwitch: false }],
        'no-lone-blocks': 'warn',
        'no-lonely-if': 'warn',
        'no-loop-func': 'warn',
        'no-mixed-operators': [
          'warn',
          {
            groups: [
              ['&', '|', '^', '~', '<<', '>>', '>>>'],
              ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
              ['&&', '||'],
              ['in', 'instanceof'],
            ],
            allowSamePrecedence: false,
          },
        ],
        'no-new-func': 'warn',
        'no-new-object': 'warn',
        'no-new-wrappers': 'warn',
        'no-octal-escape': 'warn',
        'no-regex-spaces': 'warn',
        'no-restricted-globals': ['error', 'event'],
        'no-restricted-properties': [
          'error',
          { object: 'require', property: 'ensure', message: 'Use import() instead' },
          { object: 'System', property: 'import', message: 'Use import() instead' },
        ],
        'no-restricted-syntax': ['warn', 'WithStatement'],
        'no-script-url': 'warn',
        'no-sequences': 'warn',
        'no-shadow-restricted-names': 'warn',
        'no-unneeded-ternary': 'warn',
        'no-unused-labels': 'warn',
        'no-useless-calls': 'warn',
        'no-useless-catch': 'warn',
        'no-useless-computed-key': 'warn',
        'no-useless-concat': 'warn',
        'no-useless-escape': 'warn',
        'no-useless-rename': ['warn', { ignoreDestructuring: false, ignoreExport: false }],
        'no-useless-return': 'warn',
        'no-with': 'warn',
        'object-shorthand': 'warn',
        'operator-assignment': 'warn',
        'prefer-exponentiation-operator': 'warn',
        'prefer-numeric-literals': 'warn',
        'prefer-object-spread': 'warn',
        'prefer-spread': 'warn',
        'prefer-template': 'warn',
        'require-yield': 'warn',
        'spaced-comment': [
          'warn',
          'always',
          { markers: ['/', 'TODO:', 'NOTE:', 'FIXME:'], exceptions: ['prettier-ignore'] },
        ],
        strict: ['warn', 'never'],
        'dot-location': ['warn', 'property'],
        'new-parens': 'warn',
        'no-whitespace-before-property': 'warn',
        'rest-spread-spacing': ['warn', 'never'],
        'unicode-bom': ['warn', 'never'],
        '@typescript-eslint/adjacent-overload-signatures': 'warn',
        '@typescript-eslint/consistent-generic-constructors': 'warn',
        '@typescript-eslint/consistent-type-assertions': 'warn',
        '@typescript-eslint/consistent-type-imports': [
          'warn',
          { fixStyle: 'inline-type-imports', disallowTypeAnnotations: false },
        ],
        '@typescript-eslint/method-signature-style': 'warn',
        '@typescript-eslint/no-unnecessary-type-constraint': 'warn',
        '@typescript-eslint/prefer-as-const': 'warn',
        '@typescript-eslint/prefer-function-type': 'warn',
        'import/no-empty-named-blocks': 'warn',
        'import/no-useless-path-segments': 'warn',
        'import/first': 'warn',
        'import/newline-after-import': 'warn',
        'import/no-duplicates': 'warn',
        'import/order': ['warn', { alphabetize: { order: 'asc' } }],
        'regexp/no-missing-g-flag': 'warn',
        'regexp/no-useless-assertions': 'warn',
        'regexp/no-extra-lookaround-assertions': 'warn',
        'regexp/prefer-quantifier': 'warn',
        'regexp/prefer-regexp-test': 'warn',
        'regexp/use-ignore-case': 'warn',

        parserOptions: {
          sourceType: 'script',
        },
      },
      parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
      },
    },
    {
      files: ['src/**/*.{js,cjs,mjs,jsx,ts,cts,mts,tsx'],
      extends: ['plugin:@typescript-eslint/recommended-requiring-type-checking', 'plugin:react/recommended'],
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        tsconfigRootDir: __dirname,
        project: './tsconfig.json',
      },
      rules: {
        '@typescript-eslint/consistent-type-exports': ['warn', { fixMixedExportsWithInlineTypeSpecifier: true }],
        '@typescript-eslint/no-duplicate-constituents': 'warn',
        '@typescript-eslint/no-import-type-side-effects': 'warn',
        '@typescript-eslint/no-inferrable-types': 'warn',
        '@typescript-eslint/no-this-alist': ['warn', { allowedNames: ['self'] }],
        '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'warn',
        '@typescript-eslint/no-unnecessary-qualifier': 'warn',
        '@typescript-eslint/no-unnecessary-type-arguments': 'warn',
        '@typescript-eslint/no-unnecessary-type-assertion': 'warn',
        '@typescript-eslint/non-nullable-type-assertion-style': 'warn',
        '@typescript-eslint/prefer-includes': 'warn',
        '@typescript-eslint/strict-boolean-expressions': [
          'warn',
          { allowNullableBoolean: true, allowNullableString: true, allowNullableNumber: true },
        ],
        '@typescript-eslint/dot-notation': 'warn',
        '@typescript-eslint/no-array-constructor': 'warn',
        '@typescript-eslint/no-redeclare': 'warn',
        '@typescript-eslint/no-throw-literal': 'error',
        '@typescript-eslint/no-unused-expressions': [
          'warn',
          { allowShortCircuit: true, allowTernary: true, allowTaggedTemplates: true },
        ],
        '@typescript-eslint/no-unused-vars': [
          'warn',
          { args: 'none', argsIgnorePattern: '^_', varsIgnorePattern: '^_', ignoreRestSiblings: true },
        ],
        '@typescript-eslint/no-use-before-define': [
          'warn',
          { functions: false, classes: false, variables: false, typedefs: false },
        ],
        '@typescript-eslint/no-useless-constructor': 'warn',

        '@typescript-eslint/no-floating-promises': 'off',
        '@typescript-eslint/no-for-in-array': 'off',
        '@typescript-eslint/no-misused-promises': ['error', { checksVoidReturn: false }],
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-call': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/restrict-template-expressions': 'off',
        '@typescript-eslint/unbound-method': 'off',
        '@typescript-eslint/require-await': 'off',
      },
    },
    {
      files: ['**/*.d.ts', '**/*.config.*'],
      rules: { '@typescript-eslint/no-unused-vars': 'off' },
    },
  ],
  plugins: ['react', '@typescript-eslint', 'prettier', 'import', 'regexp'],
  rules: {
    'import/order': [
      'error',
      {
        groups: [['builtin', 'external'], 'internal', 'parent', 'sibling', 'index'],
        'newlines-between': 'always',
      },
    ],
  },
};
